section	.text
	global _start       ;must be declared for using gcc
_start:                     ;tell linker entry point
	mov	edx, len    ;message length
	mov	ecx, msg    ;message to write
	mov	ebx, 1	    ;file descriptor (stdout)
	mov	eax, 4	    ;system call number (sys_write)
	int	0x80        ;call kernel
	mov	eax, 1	    ;system call number (sys_exit)
	int	0x80        ;call kernel

section	.data

A DW '50'  ; declare variable A with value 50
B DW '100' ; B with value 100
C DW '0'  ; C with value 0


section .code       ; code section

Main:
    ADD C , A , B  ;add A and B and save value in C
    LEA DX,C    ; load effective address of C in DX
    MOV AH, 9    ; move instruction type in AH
    int 21h    ;call system call for printing value of C
    ret;   ; go back to calling function

